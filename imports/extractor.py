import pefile
import pandas as pd

def extract_features(path):
    try:
        sample = pefile.PE(path)
    except Exception as e:
        return None    

    # Extract and features to the dictionary
    features_dict = {}
    features_dict['Name'] = path.split('\\')[-1]
    attributes = [
        'OPTIONAL_HEADER.CheckSum', 'FILE_HEADER.Machine', 'FILE_HEADER.SizeOfOptionalHeader',
        'FILE_HEADER.Characteristics', 'OPTIONAL_HEADER.MajorLinkerVersion', 'OPTIONAL_HEADER.MinorLinkerVersion',
        'OPTIONAL_HEADER.SizeOfCode', 'OPTIONAL_HEADER.SizeOfInitializedData', 'OPTIONAL_HEADER.SizeOfUninitializedData',
        'OPTIONAL_HEADER.AddressOfEntryPoint', 'OPTIONAL_HEADER.BaseOfCode', 'OPTIONAL_HEADER.BaseOfData',
        'OPTIONAL_HEADER.ImageBase', 'OPTIONAL_HEADER.SectionAlignment', 'OPTIONAL_HEADER.FileAlignment',
        'OPTIONAL_HEADER.MajorOperatingSystemVersion', 'OPTIONAL_HEADER.MinorOperatingSystemVersion',
        'OPTIONAL_HEADER.MajorImageVersion', 'OPTIONAL_HEADER.MinorImageVersion', 'OPTIONAL_HEADER.MajorSubsystemVersion',
        'OPTIONAL_HEADER.MinorSubsystemVersion', 'OPTIONAL_HEADER.SizeOfImage', 'OPTIONAL_HEADER.SizeOfHeaders',
        'OPTIONAL_HEADER.CheckSum', 'OPTIONAL_HEADER.Subsystem', 'OPTIONAL_HEADER.DllCharacteristics',
        'OPTIONAL_HEADER.SizeOfStackReserve', 'OPTIONAL_HEADER.SizeOfStackCommit', 'OPTIONAL_HEADER.SizeOfHeapReserve',
        'OPTIONAL_HEADER.SizeOfHeapCommit', 'OPTIONAL_HEADER.LoaderFlags', 'OPTIONAL_HEADER.NumberOfRvaAndSizes',
        'FILE_HEADER.NumberOfSections'
    ]

    for attr in attributes:
        parts = attr.split('.')
        obj = sample
        for part in parts:
            if hasattr(obj, part):
                obj = getattr(obj, part)
            else:
                obj = None
                break
        if obj is not None:
            features_dict[attr] = obj
        else:
            features_dict[attr] = 0

    MeanEntropy, MaxEntropy, MinEntropy = 0, 0, 0
    MeanRawsize, MaxRawsize, MinRawsize = 0, 0, 0
    MeanVirtualsize, MaxVirtualsize, MinVirtualsize = 0, 0, 0

    for section in sample.sections:
        MeanEntropy += section.get_entropy()
        MeanRawsize += section.SizeOfRawData
        MeanVirtualsize += section.Misc_VirtualSize

        if section.get_entropy() > MaxEntropy:
            MaxEntropy = section.get_entropy()
        if section.get_entropy() < MinEntropy:
            MinEntropy = section.get_entropy()

        if section.SizeOfRawData > MaxRawsize:
            MaxRawsize = section.SizeOfRawData
        if section.SizeOfRawData < MinRawsize:
            MinRawsize = section.SizeOfRawData

        if section.Misc_VirtualSize > MaxVirtualsize:
            MaxVirtualsize = section.Misc_VirtualSize
        if section.Misc_VirtualSize < MinVirtualsize:
            MinVirtualsize = section.Misc_VirtualSize

    features_dict['SectionsMeanEntropy'] = MeanEntropy / sample.FILE_HEADER.NumberOfSections
    features_dict['SectionsMinEntropy'] = MinEntropy
    features_dict['SectionsMaxEntropy'] = MaxEntropy
    features_dict['SectionsMeanRawsize'] = MeanRawsize / sample.FILE_HEADER.NumberOfSections
    features_dict['SectionsMinRawsize'] = MinRawsize
    features_dict['SectionMaxRawsize'] = MaxRawsize
    features_dict['SectionsMeanVirtualsize'] = MeanVirtualsize / sample.FILE_HEADER.NumberOfSections
    features_dict['SectionsMinVirtualsize'] = MinVirtualsize
    features_dict['SectionMaxVirtualsize'] = MaxVirtualsize
    # features_dict['ImportsNbDLL'] = sample.IMPORTS_NB_DLL
    # features_dict['ImportsNb'] = sample.IMPORTS_NB
    # features_dict['ImportsNbOrdinal'] = sample.IMPORTS_NB_ORDINAL
    # features_dict['ExportNb'] = sample.EXPORT_NB
    # features_dict['ResourcesNb'] = sample.RESOURCES_NB
    # features_dict['ResourcesMeanEntropy'] = sample.RESOURCES_MEAN_ENTROPY
    # features_dict['ResourcesMinEntropy'] = sample.RESOURCES_MIN_ENTROPY
    # features_dict['ResourcesMaxEntropy'] = sample.RESOURCES_MAX_ENTROPY
    # features_dict['ResourcesMeanSize'] = sample.RESOURCES_MEAN_SIZE
    # features_dict['ResourcesMinSize'] = sample.RESOURCES_MIN_SIZE
    # features_dict['ResourcesMaxSize'] = sample.RESOURCES_MAX_SIZE
    # features_dict['LoadConfigurationSize'] = sample.LOAD_CONFIGURATION_SIZE
    # features_dict['VersionInformationSize'] = sample.VERSION_INFORMATION_SIZE
    features_dict['Family'] = path.split('\\')[-2]

    return features_dict